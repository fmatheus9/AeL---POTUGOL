programa
{
//Fazer um algoritmo para corrigir provas de múltipla escolha de uma turma de 40 alunos. Cada
//prova tem 5 questões, sendo que cada questão vale dois pontos. Além da leitura dos dados dos
//alunos (nome e respostas das questões), deve ser lido o gabarito para a correção da prova. O
//algoritmo deverá calcular e imprimir a menor nota, a maior nota, a média da turma, a
//quantidade de alunos com nota acima da média da turma, e a porcentagem de alunos aprovados,
//sabendo-se que a nota mínima de aprovação é 7,0. Utilizar matriz para armazenar as respostas dos alunos
	
	funcao inicio()
	{
	
		inteiro i, j, pontos, notas[40], qnt
		real media, porcentagem
		cadeia nomes[40], respostas[40][5], gabarito[5], menor_nota, maior_nota
		escreva("ENTRADA DE DADOS:\n")
		para(i=0;i<40;i++){
			escreva("\nEntre com o nome do aluno ", i+1,": ")
			leia(nomes[i])
			para(j=0;j<5;j++){
				escreva("Entre com a resposta da questao ", j+1," (a,b,c,d,e): ")
				leia(respostas[i][j])
			}
		}

		escreva("\nGABARITO:\n")
		para(j=0;j<5;j++){
			escreva("Entre com a resposta da questao ", j+1,": ")
			leia(gabarito[j])
		}
		
		//Calculo das notasqntidade = 0.0
		para(i=0;i<40;i++){
			pontos = 0
			para(j=0;j<5;j++){
				se(respostas[i][j] == gabarito[j]){
					pontos = pontos+2
				}
			}
			notas[i] = pontos
		}

		escreva("\nMENOR NOTA:\n")
		menor_nota = function1(notas, nomes)
		escreva(menor_nota)
		escreva("\n\nMAIOR NOTA:\n")
		maior_nota = function2(notas,nomes)
		escreva(maior_nota)
		escreva("\n\nMEDIA DA TURMA:\n")
		media = function3(notas)
		escreva(media)
		escreva("\n\nQUANTIDADE DE ALUNOS COM A NOTA ACIMA DA MEDIA DA TURMA:\n")
		qnt = function4(media, notas)
		escreva(qnt)
		escreva("\n\nPORCENTAGEM DE ALUNOS APROVADOS:\n")
		porcentagem = function5(notas)
		escreva(porcentagem,"%")
	}

	funcao cadeia function1(inteiro notas[], cadeia nomes[]){
		inteiro i, menor
		cadeia result
		result = "Nome: " + nomes[0] + " Nota: " + notas[0]
		menor = notas[0]
		para(i=0;i<40;i++){
			se(notas[i]<menor){
				menor = notas[i]
				result = "Nome: " + nomes[i] + " Nota: " + notas[i]
			}
		}
		retorne result
	}
	
	funcao cadeia function2(inteiro notas[], cadeia nomes[]){
		inteiro i, maior
		cadeia result
		result = "Nome: " + nomes[0] + " Nota: " + notas[0]
		maior = notas[0]
		para(i=0;i<40;i++){
			se(maior<notas[i]){
				maior = notas[i]
				result = "Nome: " + nomes[i] + " Nota: " + notas[i]
			}
		}
		retorne result
	}

	funcao real function3(inteiro notas[]){
		inteiro i
		real result = 0.0
		para(i=0;i<40;i++){
			result = result + notas[i]
		}
		result = result/40
		retorne result
	}

	funcao inteiro function4(real media, inteiro notas[]){
		inteiro i , result
		result = 0
		para(i=0;i<40;i++){
			se(notas[i]> media){
				result = result+1
			}
		}
		retorne result
	}

	funcao real function5(inteiro notas[]){
		inteiro i
		real result, qntidade = 0.0
		para(i=0;i<40;i++){
			se(notas[i]>=7){
				qntidade++
			}
		}
		result = (qntidade*100)/40
		retorne result
	}
}




==================================================================================================================================================================



programa
{
	inclua biblioteca Util--> u
 
	funcao inicio()
	{
		inteiro opcao, case2, case3 ,case5, case6, numero1, n1,n2,n3, f, N, valorVet, vetor[10], i, j, mat[5][5]
		real case4
		cadeia  case1
		faca{
		escreva("Exercicio 2\n=============================================\n")
		escreva("1-Escrever a tabuada de um número.\n2-Encontra o menor elemento entre três números.\n3-Calcular o fatorial de um número\n4-Calcular o seguinte somatório: S = 1 + 1/1! + 1/2! + 1/3! + ... + 1/N!\n5-Buscar um dado elemento em um vetor\n6-Calcular a média dos números pares de uma matriz.\n7-Sair.\n")
		escreva("Informe um valor: ")
		leia(opcao)
		escolha(opcao){
			caso 1:
			escreva("Informe um número: ")
			leia(numero1)
			se(numero1 <0 ou numero1 > 9){
				escreva("Valor inválido\n")
			}
			senao{
				case1 = function1(numero1)
				escreva("Tabuada: ")
				escreva(case1,"\n")
			}
			pare
			
			caso 2:
			escreva("Informe o primeiro número: ")
			leia(n1)
			escreva("Informe o segundo número: ")
			leia(n2)
			escreva("Informe uo terceiro número: ")
			leia(n3)
			case2 = function2(n1,n2,n3)
			escreva("O menor valor informado foi: ", case2,"\n\n")
			pare

			caso 3:
			escreva("Informe o valor: ")
			leia(f)
			case3 = function3(f)
			escreva("Valor do fatorial de ",f,": ",case3,"\n\n")
			pare

			caso 4:
			escreva("Informe o valor de N: ")
			leia(N)
			case4 = function4(N)
			escreva("Valor do somatório: ", case4, "\n\n")
			pare

			caso 5:
			escreva("Informe um valor a ser encontrado dentro do vetor: ")
			leia(valorVet)
			para(i=0;i<10;i++){
				vetor[i] = u.sorteia(0, 99)
			}
			case5 = function5(valorVet, vetor)
			escreva("Valor do vetor: \n")
			para(i=0;i<10;i++){
				escreva(vetor[i], " - ")
			}
			escreva("\nPosição no vetor: ", case5,"\n\n")
			pare

			caso 6:
			para(i=0;i<5;i++){
				para(j=0;j<5;j++){
					mat[i][j] = u.sorteia(0, 9)
				}
			}
			para(i=0;i<5;i++){
				para(j=0;j<5;j++){
					escreva(mat[i][j]," ")
				}
				escreva("\n")
			}
			case6 = function6(mat)
			escreva("Soma dos números pares: ", case6, "\n\n")
			pare

			caso 7:
			escreva("Sisitema encerrado.")
			pare

			caso contrario:
			escreva("Valor inválido!")
			
		}
		
		}enquanto(opcao != 7)
	}
	funcao cadeia function1(inteiro numero1){
		inteiro result, i
		cadeia result2 =""
		result = 0
		para(i=1;i<=10;i++){
			result = i*numero1
			result2 = result2+result+"\n"
		}
		retorne result2
	}

	funcao inteiro function2(inteiro n1, inteiro n2, inteiro n3){
		inteiro result
		result = n1
		se(result>n2){
			result = n2
		}
		se(result>n3){
			result = n3
		}
		retorne result
	}

	funcao inteiro function3(inteiro f){
		inteiro result, i
		result = 1
		para(i=1;i<=f;i++){
			result = result*i
		}
		retorne result
	}

	funcao real function4(inteiro N){
		inteiro i
		real result
		result = 1.0
		para(i=1;i<=N;i++){
			result = result + 1.0/function3(i)
		}
		retorne result
	}
	
	funcao inteiro function5(inteiro valorVet, inteiro vetor[]){
		inteiro result, i
		result = -1
		para(i=0;i<10;i++){
			se(valorVet == vetor[i]){
				result = i
			}
		}
		se(result == -1){
			retorne result
		}
		senao{
			retorne result
		}
	}
	
	funcao inteiro function6(inteiro mat[][]){
		inteiro result, i, j
		result=0
		para(i=0;i<5;i++){
				para(j=0;j<5;j++){
					se(mat[i][j]%2==0){
						result=result+mat[i][j]
					}
				}
			}
		retorne result
	}	
}
